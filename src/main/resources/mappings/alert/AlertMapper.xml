<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zgiot.app.server.module.alert.mapper.AlertMapper">

    <resultMap id="alertDataMap" type="com.zgiot.app.server.module.alert.pojo.AlertData">
        <id property="id" column="id"/>
        <result property="thingCode" column="thing_code"/>
        <result property="metricCode" column="metric_code"/>
        <result property="alertSource" column="alert_source"/>
        <result property="alertType" column="alert_type"/>
        <result property="alertLevel" column="alert_level"/>
        <result property="alertDateTime" column="alert_datetime"/>
        <result property="alertInfo" column="alert_info"/>
        <result property="reporter" column="reporter"/>
        <result property="alertStage" column="alert_stage"/>
        <result property="repair" column="is_repair"/>
        <result property="repairConfirmUser" column="repair_confirm_user"/>
        <result property="repairStartTime" column="repair_start_time"/>
        <result property="repairEndTime" column="repair_end_time"/>
        <result property="manualIntervention" column="is_manual_intervention"/>
        <result property="feedBackImage" column="feedback_image"/>
        <result property="feedBackVideo" column="feedback_video"/>
        <result property="sceneConfirmUser" column="scene_confirm_user"/>
        <result property="sceneConfirmTime" column="scene_confirm_time"/>
        <result property="sceneConfirmState" column="scene_confirm_state"/>
        <result property="recovery" column="is_recovery"/>
        <result property="paramValue" column="param_value"/>
        <result property="paramLower" column="param_lower"/>
        <result property="paramUpper" column="param_upper"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="verifyTime" column="verify_time"/>
        <result property="postWorker" column="post_worker"/>
        <result property="dispatcher" column="dispatcher"/>
        <result property="releaseTime" column="release_time"/>
        <result property="alertDuration" column="alertDuration"/>
        <result property="repairDuration" column="repair_duration"/>
        <association property="thingModel" resultMap="thingMap"/>
        <association property="systemModel" resultMap="systemMap"/>
        <collection property="alertMessageList" resultMap="alertMessageMap"/>
    </resultMap>

    <resultMap id="thingMap" type="com.zgiot.common.pojo.ThingModel">
        <result property="thingName" column="thing_name"/>
        <result property="thingType1Code" column="thing_type1_code"/>
        <result property="thingType2Code" column="thing_type2_code"/>
    </resultMap>

    <resultMap id="systemMap" type="com.zgiot.common.pojo.SystemModel">
        <result property="id" column="system_id"/>
        <result property="systemName" column="system_name"/>
    </resultMap>

    <resultMap id="alertRecordMap" type="com.zgiot.app.server.module.alert.pojo.AlertRecord">
        <result property="thingCode" column="thing_code"/>
        <collection property="alertDataList" resultMap="alertDataMap"/>
    </resultMap>

    <resultMap id="alertMessageMap" type="com.zgiot.app.server.module.alert.pojo.AlertMessage">
        <id property="id" column="message_id"/>
        <result property="isRead" column="is_read"/>
        <result property="info" column="info"/>
        <result property="type" column="type"/>
        <result property="alertId" column="alert_id"/>
        <result property="time" column="time"/>
        <result property="userId" column="user_id"/>
        <result property="permission" column="permission"/>
    </resultMap>

    <resultMap id="alertMaskStatisticsMap" type="com.zgiot.app.server.module.alert.pojo.AlertMaskStatistics">
        <result property="thingCode" column="thing_code"/>
        <result property="systemId" column="system_id"/>
        <result property="alertType" column="alert_type"/>
        <result property="metricCode" column="metric_code"/>
        <result property="count" column="count"/>
        <association property="thingModel" resultMap="thingMap"/>
        <!--<collection property="alertMasks" resultMap="alertMaskMap"/>-->
    </resultMap>

    <resultMap id="alertMaskMap" type="com.zgiot.app.server.module.alert.pojo.AlertMask">
        <result property="alertId" column="alert_id"/>
        <result property="maskId" column="mask_id"/>
        <result property="time" column="time"/>
        <result property="userId" column="user_id"/>
        <result property="paramValue" column="param_value"/>
        <result property="paramLower" column="param_lower"/>
        <result property="paramUpper" column="param_upper"/>
        <result property="info" column="info"/>
    </resultMap>

    <resultMap id="alertMaskInfoMap" type="com.zgiot.app.server.module.alert.pojo.AlertMaskInfo">
        <result property="maskId" column="mask_id"/>
        <result property="info" column="info"/>
        <collection property="alertMasks" resultMap="alertMaskMap"/>
    </resultMap>

    <resultMap id="thingAlertRuleMap" type="com.zgiot.app.server.module.alert.pojo.ThingAlertRule">
        <result property="thingCode" column="thing_code"/>
        <result property="thingName" column="thing_name"/>
        <result property="metricCode" column="metric_code"/>
        <result property="metricName" column="metric_name"/>
        <result property="systemId" column="system_id"/>
        <result property="assetType" column="assetType"/>
        <result property="category" column="category"/>
        <result property="buildingId" column="building_id"/>
        <result property="metricType" column="metricType"/>
        <collection property="alertRules" resultMap="alertRuleMap"/>
    </resultMap>

    <resultMap id="alertRuleMap" type="com.zgiot.app.server.module.alert.pojo.AlertRule">
        <result property="id" column="id"/>
        <result property="ruleType" column="rule_type"/>
        <result property="alertLevel" column="alert_level"/>
        <result property="lowerLimit" column="lower_limit"/>
        <result property="upperLimit" column="upper_limit"/>
        <result property="enable" column="enable"/>
    </resultMap>


    <select id="getProtAlertRuleList" resultMap="thingAlertRuleMap">
        SELECT
        tml.thing_code,tml.metric_code,m.metric_type1_code as
        ruleType,r.id,r.alert_level,r.lower_limit,r.upper_limit,r.enable,s.system_id,t.thing_type1_code
        as assetType,t.thing_type2_code as category,p.building_id,m.metric_name,t.thing_name
        FROM
        rel_thing_metric_label tml
        INNER JOIN tb_metric m ON tml.metric_code = m.metric_code AND m.metric_type1_code = #{filter.alertType}
        INNER JOIN tb_thing t on tml.thing_code = t.thing_code
        INNER JOIN rel_thing_system s ON tml.thing_code = s.thing_code
        INNER JOIN tb_thing_position p ON tml.thing_code = p.thing_code
        LEFT JOIN tb_alert_rule r on tml.thing_code = r.thing_code AND tml.metric_code = r.metric_code
        <trim prefixOverrides="AND" prefix="WHERE">
            <if test="filter.assetType != null">
                AND
                t.thing_type1_code = #{filter.assetType}
            </if>
            <if test="filter.category != null">
                AND
                t.thing_type2_code = #{filter.category}
            </if>
            <if test="filter.system != null">
                AND
                s.system_id = #{filter.system}
            </if>
            <if test="filter.metricType != null">
                AND
                m.metric_type2_code = #{filter.metricType}
            </if>
            <if test="filter.metricCode != null">
                AND
                tml.metric_code= #{filter.metricCode}
            </if>
            <if test="filter.thingCode != null">
                AND
                tml.thing_code = #{filter.thingCode}
            </if>
            <if test="filter.buildingId != null">
                AND
                p.building_id = #{filter.buildingId}
            </if>
            <if test="filter.level != null">
                AND
                r.alert_level = #{filter.level}
            </if>
            <if test="filter.enable == true">
                AND
                r.enable = TRUE
            </if>
        </trim>
        <if test="filter.sortType == 2">
            ORDER BY thing_code ASC,metric_name ASC
        </if>
        <if test="filter.sortType == 3">
            order BY metric_name ASC ,category asc,thing_code asc
        </if>
        <if test="filter.sortType == 4">
            ORDER BY category ASC,metric_name asc,thing_code asc
        </if>
        <if test="filter.offset != null">
            limit #{filter.offset},#{filter.count}
        </if>

    </select>

    <select id="getProtAlertRuleCount" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        rel_thing_metric_label tml
        INNER JOIN tb_metric m ON tml.metric_code = m.metric_code AND m.metric_type1_code = #{filter.alertType}
        INNER JOIN tb_thing t on tml.thing_code = t.thing_code
        INNER JOIN rel_thing_system s ON tml.thing_code = s.thing_code
        INNER JOIN tb_thing_position p ON tml.thing_code = p.thing_code
        LEFT JOIN tb_alert_rule r on tml.thing_code = r.thing_code AND tml.metric_code = r.metric_code
        <trim prefixOverrides="AND" prefix="WHERE">
            <if test="filter.assetType != null">
                AND
                t.thing_type1_code = #{filter.assetType}
            </if>
            <if test="filter.category != null">
                AND
                t.thing_type2_code = #{filter.category}
            </if>
            <if test="filter.system != null">
                AND
                s.system_id = #{filter.system}
            </if>
            <if test="filter.metricType != null">
                AND
                m.metric_type2_code = #{filter.metricType}
            </if>
            <if test="filter.metricCode != null">
                AND
                tml.metric_code= #{filter.metricCode}
            </if>
            <if test="filter.thingCode != null">
                AND
                tml.thing_code = #{filter.thingCode}
            </if>
            <if test="filter.buildingId != null">
                AND
                p.building_id = #{filter.buildingId}
            </if>
            <if test="filter.level != null">
                AND
                r.alert_level = #{filter.level}
            </if>
            <if test="filter.enable == true">
                AND
                r.enable = TRUE
            </if>
        </trim>
    </select>


    <select id="getParamAlertConfList" resultMap="thingAlertRuleMap">
        SELECT
        c.thing_code,c.metric_code,m.metric_type2_code as
        metricType,
        <!-- r.id,r.alert_level,r.lower_limit,r.upper_limit,r.enable, -->
        s.system_id,t.thing_type1_code
        as assetType,t.thing_type2_code as category,m.metric_name,t.thing_name
        FROM
        tb_alert_param_configuration_list c
        LEFT JOIN tb_metric m ON c.metric_code = m.metric_code
        LEFT JOIN tb_thing t on c.thing_code = t.thing_code
        LEFT JOIN rel_thing_system s ON c.thing_code = s.thing_code
        <!-- LEFT JOIN tb_alert_rule r on c.thing_code = r.thing_code -->
        <!--AND c.metric_code = r.metric_code-->
        <trim prefixOverrides="AND" prefix="WHERE">
            <if test="filter.assetType != null">
                AND
                t.thing_type1_code = #{filter.assetType}
            </if>
            <if test="filter.category != null">
                AND
                t.thing_type2_code = #{filter.category}
            </if>
            <if test="filter.system != null">
                AND
                s.system_id = #{filter.system}
            </if>
            <if test="filter.metricType != null">
                AND
                m.metric_type2_code = #{filter.metricType}
            </if>
            <if test="filter.metricCode != null">
                AND
                c.metric_code= #{filter.metricCode}
            </if>
            <if test="filter.thingCode != null">
                AND
                c.thing_code = #{filter.thingCode}
            </if>
            <!--<if test="filter.buildingId != null">-->
            <!--AND-->
            <!--p.building_id = #{filter.buildingId}-->
            <!--</if>-->
            <!--<if test="filter.level != null">-->
            <!--AND-->
            <!--r.alert_level = #{filter.level}-->
            <!--</if>-->
            <!--<if test="filter.enable == true">-->
            <!--AND-->
            <!--r.enable = TRUE-->
            <!--</if>-->
        </trim>
        <if test="filter.sortType == 2">
            ORDER BY thing_code ASC,metric_name ASC
        </if>
        <if test="filter.sortType == 3">
            order BY metric_name ASC ,category asc,thing_code asc
        </if>
        <if test="filter.sortType == 4">
            ORDER BY category ASC,metric_name asc,thing_code asc
        </if>
        <if test="filter.offset != null">
            limit #{filter.offset},#{filter.count}
        </if>
    </select>

    <select id="getParamAlertConfSize" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        tb_alert_param_configuration_list c
        INNER JOIN tb_metric m ON c.metric_code = m.metric_code
        INNER JOIN tb_thing t on c.thing_code = t.thing_code
        INNER JOIN rel_thing_system s ON c.thing_code = s.thing_code
        <trim prefixOverrides="AND" prefix="WHERE">
            <if test="filter.assetType != null">
                AND
                t.thing_type1_code = #{filter.assetType}
            </if>
            <if test="filter.category != null">
                AND
                t.thing_type2_code = #{filter.category}
            </if>
            <if test="filter.system != null">
                AND
                s.system_id = #{filter.system}
            </if>
            <if test="filter.metricType != null">
                AND
                m.metric_type2_code = #{filter.metricType}
            </if>
            <if test="filter.metricCode != null">
                AND
                c.metric_code= #{filter.metricCode}
            </if>
            <if test="filter.thingCode != null">
                AND
                c.thing_code = #{filter.thingCode}
            </if>
        </trim>

    </select>

    <select id="getAlertRuleList" resultType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        SELECT
        id,
        thing_code,
        metric_code,
        rule_type,
        alert_level,
        lower_limit,
        upper_limit
        FROM
        tb_alert_rule
        WHERE
        thing_code = #{thingCode}
        AND metric_code = #{metricCode}
        <if test="filter.level != null">
            AND
            alert_level = #{filter.level}
        </if>
        <if test="filter.enable == true">
            AND
            enable = TRUE
        </if>
    </select>

    <select id="getWholeAlertRuleList" resultType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        SELECT
        id,
        thing_code,
        metric_code,
        rule_type,
        alert_level,
        lower_limit,
        upper_limit,
        delay_time,
        enable
        FROM
        tb_alert_rule
        WHERE
        rule_type = #{alertType}
        AND enable = TRUE
    </select>

    <select id="getCurrentAlertData" resultMap="alertDataMap">
        SELECT
        id,
        thing_code,
        metric_code,
        alert_source,
        alert_type,
        alert_level,
        alert_datetime,
        alert_info,
        reporter,
        alert_stage,
        is_repair,
        repair_confirm_user,
        repair_start_time,
        repair_end_time,
        is_manual_intervention,
        feedback_image,
        feedback_video,
        scene_confirm_state,
        scene_confirm_time,
        scene_confirm_user,
        is_recovery,
        param_value,
        param_lower,
        param_upper,
        last_update_time,
        verify_time,
        post_worker,
        release_time
        FROM tb_alert_data
        WHERE alert_stage != 'RELEASE'
    </select>

    <select id="getMetricAlertType" resultType="com.zgiot.app.server.module.alert.pojo.MetricAlertType">
        SELECT
        metric_code,
        alert_type
        FROM rel_metric_alert_type
        WHERE 1 = 1
    </select>

    <insert id="createAlertData" keyColumn="id" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.zgiot.app.server.module.alert.pojo.AlertData">
        INSERT INTO tb_alert_data (thing_code, metric_code, alert_source, alert_type, alert_level, alert_datetime,
        alert_info, reporter, alert_stage, is_repair, repair_confirm_user, repair_start_time, repair_end_time,
        is_manual_intervention, feedback_image, feedback_video, scene_confirm_state, scene_confirm_time,
        scene_confirm_user, is_recovery, param_value, param_lower, param_upper, last_update_time, verify_time,
        post_worker, dispatcher, release_time)
        VALUES
        (#{thingCode}, #{metricCode}, #{alertSource}, #{alertType}, #{alertLevel}, #{alertDateTime}, #{alertInfo},
        #{reporter}, #{alertStage}, #{repair}, #{repairConfirmUser}, #{repairStartTime},
        #{repairEndTime},
        #{manualIntervention},
        #{feedBackImage},
        #{feedBackVideo},
        #{sceneConfirmState},
        #{sceneConfirmTime},
        #{sceneConfirmUser},
        #{recovery}, #{paramValue},
        #{paramLower}, #{paramUpper}, #{lastUpdateTime}, #{verifyTime}, #{postWorker}, #{dispatcher},
        #{releaseTime})
    </insert>

    <insert id="createAlertDataBackup"
            parameterType="com.zgiot.app.server.module.alert.pojo.AlertData">
        INSERT INTO tb_alert_data_backup (id, thing_code, metric_code, alert_source, alert_type, alert_level,
        alert_datetime, alert_info, reporter, alert_stage, is_repair, repair_confirm_user, repair_start_time,
        repair_end_time, is_manual_intervention, feedback_image, feedback_video, scene_confirm_state,
        scene_confirm_time, scene_confirm_user, is_recovery, param_value, param_lower, param_upper, last_update_time,
        verify_time, post_worker, dispatcher, release_time)
        VALUES (#{id}, #{thingCode}, #{metricCode}, #{alertSource}, #{alertType}, #{alertLevel}, #{alertDateTime},
        #{alertInfo}, #{reporter}, #{alertStage}, #{repair}, #{repairConfirmUser}, #{repairStartTime},
        #{repairEndTime}, #{manualIntervention},
        #{feedBackImage}, #{feedBackVideo},
        #{sceneConfirmState}, #{sceneConfirmTime},
        #{sceneConfirmUser}, #{recovery},
        #{paramValue}, #{paramLower}, #{paramUpper}, #{lastUpdateTime}, #{verifyTime}, #{postWorker},
        #{dispatcher}, #{releaseTime})
    </insert>

    <update id="updateAlertData">
        UPDATE tb_alert_data
        SET
        thing_code = #{thingCode},
        metric_code = #{metricCode},
        alert_source = #{alertSource},
        alert_type = #{alertType},
        alert_level = #{alertLevel},
        alert_datetime = #{alertDateTime},
        alert_info = #{alertInfo},
        reporter = #{reporter},
        alert_stage = #{alertStage},
        is_repair = #{repair},
        repair_confirm_user = #{repairConfirmUser},
        repair_start_time = #{repairStartTime},
        repair_end_time = #{repairEndTime},
        is_manual_intervention = #{manualIntervention},
        feedback_image = #{feedBackImage},
        feedback_video = #{feedBackVideo},
        scene_confirm_state = #{sceneConfirmState},
        scene_confirm_time = #{sceneConfirmTime},
        scene_confirm_user = #{sceneConfirmUser},
        is_recovery = #{recovery},
        param_value = #{paramValue},
        param_lower = #{paramLower},
        param_upper = #{paramUpper},
        last_update_time = #{lastUpdateTime},
        verify_time = #{verifyTime},
        post_worker = #{postWorker},
        dispatcher = #{dispatcher},
        release_time = #{releaseTime}
        WHERE id = #{id}
    </update>

    <update id="updateAlertDataBackup">
        UPDATE tb_alert_data_backup
        SET
        thing_code = #{thingCode},
        metric_code = #{metricCode},
        alert_source = #{alertSource},
        alert_type = #{alertType},
        alert_level = #{alertLevel},
        alert_datetime = #{alertDateTime},
        alert_info = #{alertInfo},
        reporter = #{reporter},
        alert_stage = #{alertStage},
        is_repair = #{repair},
        repair_confirm_user = #{repairConfirmUser},
        repair_start_time = #{repairStartTime},
        repair_end_time = #{repairEndTime},
        is_manual_intervention = #{manualIntervention},
        feedback_image = #{feedBackImage},
        feedback_video = #{feedBackVideo},
        scene_confirm_state = #{sceneConfirmState},
        scene_confirm_time = #{sceneConfirmTime},
        scene_confirm_user = #{sceneConfirmUser},
        is_recovery = #{recovery},
        param_value = #{paramValue},
        param_lower = #{paramLower},
        param_upper = #{paramUpper},
        last_update_time = #{lastUpdateTime},
        verify_time = #{verifyTime},
        post_worker = #{postWorker},
        dispatcher = #{dispatcher},
        release_time = #{releaseTime}
        WHERE id = #{id}
    </update>

    <update id="releaseAlertData">
        UPDATE tb_alert_data
        SET
        alert_stage = #{alertStage},
        scene_confirm_state = #{sceneConfirmState},
        scene_confirm_time = #{sceneConfirmTime},
        scene_confirm_user = #{sceneConfirmUser},
        is_recovery = #{recovery},
        post_worker = #{postWorker},
        dispatcher = #{dispatcher},
        release_time = #{releaseTime}
        WHERE id = #{id}
    </update>

    <update id="releaseAlertDataBackup">
        UPDATE tb_alert_data_backup
        SET
        alert_stage = #{alertStage},
        scene_confirm_state = #{sceneConfirmState},
        scene_confirm_time = #{sceneConfirmTime},
        scene_confirm_user = #{sceneConfirmUser},
        is_recovery = #{recovery},
        post_worker = #{postWorker},
        dispatcher = #{dispatcher},
        release_time = #{releaseTime}
        WHERE id = #{id}
    </update>

    <insert id="saveAlertMessage" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO tb_alert_message (info, type, alert_id, time, is_read, user_id, permission)
        VALUES (#{info}, #{type}, #{alertId}, #{time}, #{isRead}, #{userId}, #{permission})
    </insert>

    <select id="getAlertMessage" resultType="com.zgiot.app.server.module.alert.pojo.AlertMessage">
        SELECT
        id,
        info,
        type,
        alert_id,
        time,
        is_read,
        user_id,
        permission
        FROM tb_alert_message
        WHERE alert_id = #{alertId}
        ORDER BY time
    </select>

    <select id="getAlertDataListGroupByThing" resultMap="alertRecordMap">
        SELECT
        ad.id,ad.thing_code,ad.metric_code,ad.alert_source,ad.alert_type,ad.alert_level,ad.alert_datetime,ad.alert_info,ad.reporter,
        ad.alert_stage,ad.is_repair,ad.repair_confirm_user,ad.repair_start_time,ad.repair_end_time,
        ad.is_manual_intervention,ad.feedback_image,ad.feedback_video,ad.scene_confirm_state,ad.scene_confirm_time,
        ad.scene_confirm_user,ad.is_recovery,ad.param_value,ad.param_lower,ad.param_upper,ad.last_update_time,ad.verify_time,
        ad.post_worker,ad.dispatcher,ad.release_time
        <if test="stage == 'RELEASE'">
            ,ABS(ad.release_time-ad.alert_datetime) as alertDuration
        </if>
        <!--<if test="thingCode != null"> -->
        <!--<if test="stage != 'RELEASE'">-->
        <!--,am.id as message_id,am.user_id,am.time,am.info,am.alert_id,am.is_read,am.permission,am.type-->
        <!--</if>-->
        <!--</if>-->
        <if test="stage == 'RELEASE'">
            ,rts.system_id
        </if>
        FROM tb_alert_data ad
        <if test="thingCode == null">
            <if test="systems != null or stage == 'RELEASE'">
                ,rel_thing_system rts
            </if>
            <if test="buildingIds != null or floors != null">
                ,tb_thing_position ttp
            </if>
        </if>
        <!--<if test="thingCode != null"> -->
        <!--<if test="stage != 'RELEASE'">-->
        <!--,tb_alert_message am-->
        <!--</if>-->
        <!--</if>-->
        <trim prefix="where" prefixOverrides="AND">
            <!--<if test="thingCode != null"> -->
            <!--<if test="stage != 'RELEASE'">-->
            <!--AND-->
            <!--ad.id = am.alert_id-->
            <!--</if>-->
            <!--</if>-->
            <if test="thingCode == null">
                <if test="systems != null or stage == 'RELEASE'">
                    AND ad.thing_code = rts.thing_code
                </if>
                <if test="buildingIds != null or floors != null">
                    AND ad.thing_code = ttp.thing_code
                </if>
            </if>
            <if test="stage !=null">
                AND
                ad.alert_stage = #{stage}
            </if>
            <if test="excluStage != null">
                AND
                ad.alert_stage != #{excluStage}
            </if>
            <if test="levels != null">
                AND
                <foreach collection="levels" item="level" index="index" open="ad.alert_level in (" close=")"
                         separator=",">
                    #{level}
                </foreach>
            </if>
            <if test="types != null">
                AND
                <foreach collection="types" item="type" index="index" open="ad.alert_type in (" close=")"
                         separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="buildingIds != null">
                AND
                <foreach collection="buildingIds" item="buildingId" index="index" open="ttp.building_id in (" close=")"
                         separator=",">
                    #{buildingId}
                </foreach>
            </if>
            <if test="floors != null">
                AND
                <foreach collection="floors" item="floor" index="index" open="ttp.floor in (" close=")" separator=",">
                    #{floor}
                </foreach>
            </if>
            <if test="systems != null">
                AND
                <foreach collection="systems" item="system" index="index" open="rts.system_id in (" close=")"
                         separator=",">
                    #{system}
                </foreach>
            </if>
            <if test="startTime != null">
                AND
                ad.alert_datetime &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND
                ad.alert_datetime &lt;= #{endTime}
            </if>
            <if test="thingCode != null">
                AND
                ad.thing_code = #{thingCode}
            </if>
        </trim>
        <if test="thingCode == null">
            ORDER BY ad.alert_level is not null,ad.alert_level desc,ad.alert_datetime desc
        </if>
        <if test="thingCode != null">
            ORDER BY ad.alert_level is not null,ad.alert_datetime DESC
        </if>
        <!--<if test="offset != null">-->
        <!--limit #{offset},#{count}-->
        <!--</if>-->
    </select>

    <update id="setRead" parameterType="java.lang.Integer">
        UPDATE tb_alert_message SET is_read = #{state} WHERE id IN
        <foreach collection="messageIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>


    <select id="getAlertDataList" resultMap="alertDataMap">
        SELECT
        ad.id,ad.thing_code,ad.metric_code,ad.alert_source,ad.alert_type,ad.alert_level,ad.alert_datetime,ad.alert_info,ad.reporter,ad.alert_stage,ad.is_repair,ad.repair_confirm_user,ad.repair_start_time,ad.repair_end_time,ad.is_manual_intervention,ad.feedback_image,ad.feedback_video,ad.scene_confirm_state,ad.scene_confirm_time,ad.scene_confirm_user,ad.is_recovery,ad.param_value,ad.param_lower,ad.param_upper,ad.last_update_time,ad.verify_time,ad.post_worker,ad.dispatcher,ad.release_time
        ,abs(ad.repair_end_time-ad.repair_start_time) as repair_duration,
        tt.thing_name,tt.thing_type1_code,tt.thing_type2_code,rts.system_id
        <if test="stage == 'RELEASE'">
            ,ABS(ad.release_time-ad.alert_datetime) as alertDuration
        </if>
        FROM tb_alert_data ad,tb_thing tt,rel_thing_system rts
        WHERE ad.thing_code = tt.thing_code AND ad.thing_code = rts.thing_code
        <if test="stage !=null">
            AND
            ad.alert_stage = #{stage}
        </if>
        <if test="excluStage != null">
            AND
            ad.alert_stage != #{excluStage}
        </if>
        <if test="level != null">
            AND
            ad.alert_level= #{level}
        </if>
        <if test="type != null">
            AND
            ad.alert_type = #{type}
        </if>
        <if test="system != null">
            AND
            rts.system_id= #{system}
        </if>
        <if test="startTime != null">
            AND
            ad.alert_datetime &gt;= #{startTime} AND ad.alert_datetime &lt; #{endTime}
        </if>
        <if test="assetType != null">
            AND
            tt.thing_type1_code = #{assetType}
        </if>
        <if test="category != null">
            AND
            tt.thing_type2_code = #{category}
        </if>
        <if test="thingCode != null">
            AND
            ad.thing_code = #{thingCode}
        </if>
        <if test="thingCode == null and stage == 'RELEASE'">
            <if test="sortType == 0">
                ORDER BY alert_type, alert_level,repair_duration DESC ,repair_start_time
            </if>
            <if test="sortType == 1">
                ORDER BY alert_level desc,alertDuration ASC,thing_code ASC
            </if>
            <if test="sortType == 2">
                ORDER BY thing_code ASC, alert_info ASC
            </if>
            <if test="sortType == 3">
                order BY alert_info ASC,category ASC,thing_code ASC
            </if>
            <if test="sortType == 4">
                ORDER BY category ASC, alert_info ASC,thing_code ASC
            </if>
        </if>
        <if test="thingCode != null and stage == 'RELEASE'">
            ORDER BY ad.alert_level desc,alertDuration ASC
        </if>
        <if test="offset != null">
            limit #{offset},#{count}
        </if>

    </select>

    <select id="getAlertDataListCount" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM tb_alert_data ad,tb_thing tt,rel_thing_system rts
        WHERE ad.thing_code = tt.thing_code AND ad.thing_code = rts.thing_code
        <if test="stage !=null">
            AND
            ad.alert_stage = #{stage}
        </if>
        <if test="excluStage != null">
            AND
            ad.alert_stage != #{excluStage}
        </if>
        <if test="level != null">
            AND
            ad.alert_level= #{level}
        </if>
        <if test="type != null">
            AND
            ad.alert_type = #{type}
        </if>
        <if test="system != null">
            AND
            rts.system_id= #{system}
        </if>
        <if test="startTime != null">
            AND
            ad.alert_datetime &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND ad.alert_datetime &lt; #{endTime}
        </if>
        <if test="assetType != null">
            AND
            tt.thing_type1_code = #{assetType}
        </if>
        <if test="category != null">
            AND
            tt.thing_type2_code = #{category}
        </if>
        <if test="thingCode != null">
            AND
            ad.thing_code = #{thingCode}
        </if>
    </select>

    <insert id="saveAlertShield" parameterType="com.zgiot.app.server.module.alert.pojo.AlertMask"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO tb_alert_mask (alert_id, mask_id, time, user_id, param_value, param_lower, param_upper) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.alertId},#{item.maskId},#{item.time},#{item.userId},#{item.paramValue},#{item.paramLower},#{item.paramUpper})
        </foreach>
    </insert>

    <select id="getAlertMaskInfo" resultMap="alertMaskInfoMap">
        SELECT
        d.thing_code,
        d.metric_code,
        d.alert_type,
        s.mask_id,
        m.info,
        s.time,
        s.user_id,
        s.param_upper,
        s.param_lower,
        s.param_value
        FROM tb_alert_data d, tb_alert_mask s, tb_fix_message m
        WHERE s.mask_id = m.id
        AND d.id = s.alert_id
        and d.thing_code = #{thingCode} and d.metric_code = #{metricCode}
        <if test="startTime != null">
            AND
            alert_datetime &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and alert_datetime &lt; #{endTime}
        </if>
    </select>

    <insert id="insertAlertRules" useGeneratedKeys="true" keyProperty="id" keyColumn="id"
            parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        INSERT INTO tb_alert_rule(id,thing_code,metric_code,rule_type,alert_level,lower_limit,upper_limit) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.thingCode},#{item.metricCode},#{item.ruleType},#{item.alertLevel},#{item.lowerLimit},#{item.upperLimit})
        </foreach>
    </insert>

    <update id="updateAlertRules" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        <foreach collection="list" item="item" separator=";">
            UPDATE tb_alert_rule SET thing_code = #{item.thingCode},metric_code=
            #{item.metricCode},rule_type=#{item.ruleType},alert_level=#{item.alertLevel},lower_limit=#{item.lowerLimit},upper_limit=#{item.upperLimit}
            WHERE id=#{item.id}
        </foreach>
    </update>

    <delete id="deleteAlertRules">
        DELETE FROM tb_alert_rule WHERE id in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>


    <select id="getStatisticsInfo" resultType="com.zgiot.app.server.module.alert.pojo.AlertStatisticsNum">
        SELECT
        <if test="type == 1">
            thing_code,
        </if>
        COUNT(alert_level) as sumNum FROM `tb_alert_data`
        WHERE alert_datetime &gt;= #{startTime} AND alert_datetime &lt; #{endTime}
        <if test="alertStage != null">
            <!--<if test="alertStage == 'UNRELEASE'">-->
            <!--AND alert_stage != 'RELEASE'-->
            <!--</if>-->
            <!--<if test="alertStage != 'UNRELEASE'">-->
            AND alert_stage = #{alertStage}
        </if>
        <!--</if>-->
        <if test="excluStage != null">
            AND alert_stage != #{excluStage}
        </if>
        <if test="type == 1">
            GROUP BY thing_code
            ORDER BY sumNum DESC,thingCode ASC ;
        </if>

    </select>

    <select id="getLevelStatisticsInfo" resultType="com.zgiot.app.server.module.alert.pojo.AlertLevelNum">
        SELECT
        <if test="type == 1">
            thing_code,
        </if>
        alert_level,count(1) as count FROM `tb_alert_data`
        WHERE alert_datetime &gt;= #{startTime} AND alert_datetime &lt; #{endTime}
        <if test="alertStage != null">
            AND alert_stage = #{alertStage}
        </if>
        <!--</if>-->
        <if test="excluStage != null">
            AND alert_stage != #{excluStage}
        </if>
        <if test="type == 1">
            GROUP BY thing_code,alert_level
        </if>
        <if test="type == 0">
            group by alert_level
        </if>

    </select>


    <select id="getTypeStatisticsInfo" resultType="com.zgiot.app.server.module.alert.pojo.AlertStatisticsNum">
        SELECT
        DATE_FORMAT(alert_datetime, '%Y%m%d') dayStr,
        count(alert_type) AS sumNum
        FROM tb_alert_data
        WHERE alert_type = #{alertType}
        AND alert_datetime &gt;= #{startTime} AND alert_datetime &lt; #{endTime}
        GROUP BY dayStr
        ORDER BY dayStr DESC;
    </select>


    <select id="getRepairStatisticsInfo" resultType="com.zgiot.app.server.module.alert.pojo.AlertRepairStatistics">
        SELECT thing_code, sum(
        repair_end_time - repair_start_time
        ) repair_duration
        FROM `tb_alert_data`
        <trim prefix="where" prefixOverrides="and">
            <if test="startTime != null">
                AND
                alert_datetime &gt;= #{startTime}
            </if>
            <if test="endTime !=null">
                and alert_datetime &lt; #{endTime}
            </if>
            <if test="alertLevel != null">
                and
                alert_level = #{alertLevel}
            </if>
        </trim>
        GROUP BY thing_code
        HAVING repair_duration is not null
        ORDER BY repair_duration DESC ;
    </select>

    <select id="getMaskStatisticsInfo" resultMap="alertMaskStatisticsMap">
        select d.thing_code,d.alert_type,d.metric_code,t.thing_name,t.thing_type1_code,t.thing_type2_code,
        s.system_id,count(*) as count
        <!--,m.time,m.user_id,m.param_value,m.param_lower,m.param_upper,m.mask_id,f.info as mask_info-->
        from tb_alert_data d,tb_alert_mask m,tb_thing t,rel_thing_system s
        <!--,tb_fix_message f-->
        WHERE d.id = m.alert_id
        AND d.thing_code = t.thing_code
        AND d.thing_code = s.thing_code
        <!--AND m.mask_id = f.id-->
        <if test="system != null">
            AND
            s.system_id = #{system}
        </if>
        <if test="startTime != null">
            AND
            d.alert_datetime &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND d.alert_datetime &lt; #{endTime}
        </if>
        <if test="assetType != null">
            AND
            t.thing_type1_code = #{assetType}
        </if>
        <if test="category != null">
            AND
            t.thing_type2_code = #{category}
        </if>
        <if test="thingCode != null">
            AND
            d.thing_code = #{thingCode}
        </if>
        <if test="level != null">
            AND
            d.alert_level = #{level}
        </if>
        <if test="type != null">
            AND
            d.alert_type = #{type}
        </if>
        group by thing_code,metric_code
        order by count desc,thing_code asc
        <if test="offset != null">
            limit #{offset},#{count}
        </if>
    </select>

    <select id="getMaskStatisticsInfoCount" resultType="java.lang.Integer">
        select count(*) from
        (select count(*),d.thing_code,d.metric_code
        from tb_alert_data d,tb_alert_mask m,tb_thing t,rel_thing_system s,tb_fix_message f
        WHERE d.id = m.alert_id
        AND d.thing_code = t.thing_code
        AND d.thing_code = s.thing_code
        AND m.mask_id = f.id
        <if test="system != null">
            AND
            s.system_id = #{system}
        </if>
        <if test="startTime != null">
            AND
            d.alert_datetime &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND d.alert_datetime &lt; #{endTime}
        </if>
        <if test="assetType != null">
            AND
            t.thing_type1_code = #{assetType}
        </if>
        <if test="category != null">
            AND
            t.thing_type2_code = #{category}
        </if>
        <if test="thingCode != null">
            AND
            d.thing_code = #{thingCode}
        </if>
        <if test="level != null">
            AND
            d.alert_level = #{level}
        </if>
        <if test="type != null">
            AND
            d.alert_type = #{type}
        </if>
        group by d.thing_code,d.metric_code) aa
    </select>

    <delete id="clearAlertDateHistory">
        DELETE FROM tb_alert_data
        WHERE alert_datetime &lt; #{timeStamp} AND alert_stage = #{stage};
    </delete>

    <update id="updateAlertRule" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        UPDATE tb_alert_rule
        SET alert_level = #{alertRule.alertLevel},lower_limit = #{alertRule.lowerLimit},upper_limit =
        #{alertRule.upperLimit},
        enable = #{alertRule.enable}
        WHERE id = #{alertRule.id};
    </update>

    <insert id="insertAlertRule" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule"
            useGeneratedKeys="true" keyColumn="id" keyProperty="alertRule.id">
        INSERT INTO tb_alert_rule (thing_code, metric_code, rule_type, alert_level, lower_limit, upper_limit, enable)
        VALUES
        (#{alertRule.thingCode}, #{alertRule.metricCode}, #{alertRule.ruleType}, #{alertRule.alertLevel},
        #{alertRule.lowerLimit}, #{alertRule.upperLimit}, #{alertRule.enable})
    </insert>

    <insert id="setParamConfigurationList" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        INSERT INTO tb_alert_param_configuration_list (thing_code, metric_code) VALUES
        <foreach collection="list" item="item" open="(" separator="),(" close=")">
            #{item.thingCode},#{item.metricCode}
        </foreach>
    </insert>

    <select id="getParamConfigurationList" resultType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        SELECT thing_code, metric_code FROM tb_alert_param_configuration_list
        <if test="metricCode != null">
            WHERE metric_code = #{metricCode}
        </if>
    </select>

    <select id="getParamThreshold" resultType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        SELECT
        id,
        thing_code,
        metric_code,
        lower_limit,
        upper_limit
        FROM tb_param_range
        WHERE thing_code = #{thingCode} AND metric_code = #{metricCode}
    </select>

    <update id="setParamThreshold" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        UPDATE tb_param_range
        SET lower_limit = #{lowerLimit} , upper_limit = #{upperLimit}
        WHERE thing_code = #{thingCode} AND metric_code = #{metricCode}
    </update>

    <insert id="insertParamThreshold" parameterType="com.zgiot.app.server.module.alert.pojo.AlertRule">
        INSERT INTO tb_param_range (thing_code,metric_code,lower_limit,upper_limit) VALUES (#{thingCode},#{metricCode},#{lowerLimit},#{upperLimit})
    </insert>

</mapper>